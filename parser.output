State 52 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 57 conflicts: 1 shift/reduce
State 64 conflicts: 4 shift/reduce
State 66 conflicts: 4 shift/reduce
State 68 conflicts: 4 shift/reduce
State 76 conflicts: 16 reduce/reduce
State 143 conflicts: 2 shift/reduce
State 144 conflicts: 2 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 16 reduce/reduce
State 217 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ProcedureList

    2 ProcedureList: Procedure
    3              | Procedure ProcedureList

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    5 ParamList: ε
    6          | Param
    7          | ParamList SEMICOLON Param

    8 Param: IDList COLON Type

    9 IDList: IDENTIFIER
   10       | IDENTIFIER COMMA IDList

   11 Body: OptionalProcedures OptionalDeclarations OptionalStatements

   12 OptionalProcedures: ε
   13                   | NestedProcedures

   14 NestedProcedures: Procedure
   15                 | Procedure NestedProcedures

   16 OptionalDeclarations: ε
   17                     | Declarations

   18 OptionalStatements: ε
   19                   | Statements

   20 OptionalReturn: ε
   21               | RETURN Expression SEMICOLON

   22 Block: LBRACE OptionalDeclarations OptionalStatements RBRACE

   23 Declarations: VarDeclaration
   24             | VarDeclaration Declarations

   25 VarDeclaration: VAR SingleVarDeclaration SEMICOLON
   26               | VAR MultiVarDeclaration SEMICOLON

   27 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET INT_LITERAL RBRACKET
   28                     | IDENTIFIER COLON Type

   29 MultiVarDeclaration: IDList COLON Type
   30                    | IDList COLON STRING LBRACKET INT_LITERAL RBRACKET

   31 Statements: Statement
   32           | Statement Statements

   33 Statement: IDENTIFIER EQUAL Expression SEMICOLON
   34          | IDENTIFIER EQUAL STRING_LITERAL SEMICOLON
   35          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON
   36          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON
   37          | IF LPAREN Expression RPAREN Block
   38          | IF LPAREN Expression RPAREN Block ELSE Block
   39          | WHILE LPAREN Expression RPAREN Block
   40          | LBRACE Statements RBRACE
   41          | Block OptionalStatements
   42          | FunctionCall

   43 FunctionCall: IDENTIFIER LPAREN ArgumentList RPAREN SEMICOLON

   44 Expression: Expression OR Expression
   45           | Expression AND Expression
   46           | Expression EQUALS Expression
   47           | Expression NOTEQUAL Expression
   48           | Expression LT Expression
   49           | Expression LTE Expression
   50           | Expression GT Expression
   51           | Expression GTE Expression
   52           | AdditiveExpr

   53 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr
   54             | AdditiveExpr MINUS MultiplicativeExpr
   55             | MultiplicativeExpr

   56 MultiplicativeExpr: MultiplicativeExpr MUL UnaryExpr
   57                   | MultiplicativeExpr DIV UnaryExpr
   58                   | UnaryExpr

   59 UnaryExpr: NOT UnaryExpr
   60          | MINUS UnaryExpr
   61          | AMP Variable
   62          | DEREFERENCE IDENTIFIER
   63          | DEREFERENCE Expression
   64          | DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL RBRACKET
   65          | BAR Expression BAR
   66          | PrimaryExpr

   67 Variable: IDENTIFIER
   68         | IDENTIFIER LBRACKET Expression RBRACKET

   69 PrimaryExpr: IDENTIFIER
   70            | INT_LITERAL
   71            | LPAREN Expression RPAREN
   72            | IDENTIFIER LBRACKET Expression RBRACKET
   73            | CHAR_LITERAL
   74            | TRUE
   75            | FALSE
   76            | NULLTOKEN

   77 ArgumentList: ε
   78             | ExpressionArg
   79             | ExpressionArg COMMA ArgumentList

   80 ExpressionArg: ExpressionArg OR ExpressionArg
   81              | ExpressionArg AND ExpressionArg
   82              | ExpressionArg EQUALS ExpressionArg
   83              | ExpressionArg NOTEQUAL ExpressionArg
   84              | ExpressionArg LT ExpressionArg
   85              | ExpressionArg LTE ExpressionArg
   86              | ExpressionArg GT ExpressionArg
   87              | ExpressionArg GTE ExpressionArg
   88              | AdditiveExprArg

   89 AdditiveExprArg: AdditiveExprArg PLUS MultiplicativeExprArg
   90                | AdditiveExprArg MINUS MultiplicativeExprArg
   91                | MultiplicativeExprArg

   92 MultiplicativeExprArg: MultiplicativeExprArg MUL UnaryExprArg
   93                      | MultiplicativeExprArg DIV UnaryExprArg
   94                      | UnaryExprArg

   95 UnaryExprArg: NOT UnaryExprArg
   96             | MINUS UnaryExprArg
   97             | AMP VariableArg
   98             | DEREFERENCE IDENTIFIER
   99             | DEREFERENCE ExpressionArg
  100             | DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL RBRACKET
  101             | BAR ExpressionArg BAR
  102             | PrimaryExprArg

  103 VariableArg: IDENTIFIER
  104            | IDENTIFIER LBRACKET ExpressionArg RBRACKET

  105 PrimaryExprArg: IDENTIFIER
  106               | INT_LITERAL
  107               | LPAREN ExpressionArg RPAREN
  108               | IDENTIFIER LBRACKET ExpressionArg RBRACKET
  109               | CHAR_LITERAL
  110               | TRUE
  111               | FALSE
  112               | NULLTOKEN

  113 Type: BOOLEAN
  114     | CHAR
  115     | INTEGER
  116     | INTPTR
  117     | CHARPTR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER <u_base_charptr> (258) 4 9 10 27 28 33 34 35 36 43 62 64 67 68 69 72 98 100 103 104 105 108
    INT_LITERAL <u_base_int> (259) 27 30 64 70 100 106
    CHAR_LITERAL <u_base_int> (260) 73 109
    BOOLEAN (261) 113
    CHAR (262) 114
    INTEGER (263) 115
    STRING (264) 27 30
    INTPTR (265) 116
    CHARPTR (266) 117
    IF (267) 37 38
    ELSE (268) 38
    WHILE (269) 39
    VAR (270) 25 26
    PROCEDURE (271) 4
    RETURN (272) 4 21
    NULLTOKEN (273) 76 112
    AND (274) 45 81
    DIV (275) 57 93
    EQUAL (276) 33 34 35 36
    EQUALS (277) 46 82
    GT (278) 50 86
    GTE (279) 51 87
    LT (280) 48 84
    LTE (281) 49 85
    MINUS (282) 54 60 90 96
    NOT (283) 59 95
    NOTEQUAL (284) 47 83
    OR (285) 44 80
    PLUS (286) 53 89
    MUL (287) 56 92
    AMP (288) 61 97
    DEREFERENCE (289) 62 63 64 98 99 100
    TRUE (290) 74 110
    FALSE (291) 75 111
    COMMA (292) 10 79
    COLON (293) 8 27 28 29 30
    UMINUS (294)
    LBRACE (295) 4 22 40
    RBRACE (296) 4 22 40
    SEMICOLON (297) 7 21 25 26 33 34 35 36 43
    LPAREN (298) 4 37 38 39 43 71 107
    RPAREN (299) 4 37 38 39 43 71 107
    BAR (300) 65 101
    LBRACKET (301) 27 30 35 36 64 68 72 100 104 108
    RBRACKET (302) 27 30 35 36 64 68 72 100 104 108
    STRING_LITERAL (303) 34 36


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    Program <u_program> (50)
        on left: 1
        on right: 0
    ProcedureList <u_proc_list> (51)
        on left: 2 3
        on right: 1 3
    Procedure <u_proc> (52)
        on left: 4
        on right: 2 3 14 15
    ParamList (53)
        on left: 5 6 7
        on right: 4 7
    Param (54)
        on left: 8
        on right: 6 7
    IDList (55)
        on left: 9 10
        on right: 8 10 29 30
    Body (56)
        on left: 11
        on right: 4
    OptionalProcedures (57)
        on left: 12 13
        on right: 11
    NestedProcedures (58)
        on left: 14 15
        on right: 13 15
    OptionalDeclarations (59)
        on left: 16 17
        on right: 11 22
    OptionalStatements (60)
        on left: 18 19
        on right: 11 22 41
    OptionalReturn (61)
        on left: 20 21
        on right: 4
    Block (62)
        on left: 22
        on right: 37 38 39 41
    Declarations (63)
        on left: 23 24
        on right: 17 24
    VarDeclaration (64)
        on left: 25 26
        on right: 23 24
    SingleVarDeclaration (65)
        on left: 27 28
        on right: 25
    MultiVarDeclaration (66)
        on left: 29 30
        on right: 26
    Statements (67)
        on left: 31 32
        on right: 19 32 40
    Statement (68)
        on left: 33 34 35 36 37 38 39 40 41 42
        on right: 31 32
    FunctionCall (69)
        on left: 43
        on right: 42
    Expression <u_expr> (70)
        on left: 44 45 46 47 48 49 50 51 52
        on right: 21 33 35 36 37 38 39 44 45 46 47 48 49 50 51 63 65 68 71 72
    AdditiveExpr <u_expr> (71)
        on left: 53 54 55
        on right: 52 53 54
    MultiplicativeExpr <u_expr> (72)
        on left: 56 57 58
        on right: 53 54 55 56 57
    UnaryExpr <u_expr> (73)
        on left: 59 60 61 62 63 64 65 66
        on right: 56 57 58 59 60
    Variable <u_lhs> (74)
        on left: 67 68
        on right: 61
    PrimaryExpr <u_expr> (75)
        on left: 69 70 71 72 73 74 75 76
        on right: 66
    ArgumentList <u_expr_list> (76)
        on left: 77 78 79
        on right: 43 79
    ExpressionArg (77)
        on left: 80 81 82 83 84 85 86 87 88
        on right: 78 79 80 81 82 83 84 85 86 87 99 101 104 107 108
    AdditiveExprArg (78)
        on left: 89 90 91
        on right: 88 89 90
    MultiplicativeExprArg (79)
        on left: 92 93 94
        on right: 89 90 91 92 93
    UnaryExprArg (80)
        on left: 95 96 97 98 99 100 101 102
        on right: 92 93 94 95 96
    VariableArg (81)
        on left: 103 104
        on right: 97
    PrimaryExprArg (82)
        on left: 105 106 107 108 109 110 111 112
        on right: 102
    Type (83)
        on left: 113 114 115 116 117
        on right: 4 8 28 29


State 0

    0 $accept: • Program $end

    PROCEDURE  shift, and go to state 1

    Program        go to state 2
    ProcedureList  go to state 3
    Procedure      go to state 4


State 1

    4 Procedure: PROCEDURE • IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 6


State 3

    1 Program: ProcedureList •

    $default  reduce using rule 1 (Program)


State 4

    2 ProcedureList: Procedure •
    3              | Procedure • ProcedureList

    PROCEDURE  shift, and go to state 1

    $default  reduce using rule 2 (ProcedureList)

    ProcedureList  go to state 7
    Procedure      go to state 4


State 5

    4 Procedure: PROCEDURE IDENTIFIER • LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    LPAREN  shift, and go to state 8


State 6

    0 $accept: Program $end •

    $default  accept


State 7

    3 ProcedureList: Procedure ProcedureList •

    $default  reduce using rule 3 (ProcedureList)


State 8

    4 Procedure: PROCEDURE IDENTIFIER LPAREN • ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (ParamList)

    ParamList  go to state 10
    Param      go to state 11
    IDList     go to state 12


State 9

    9 IDList: IDENTIFIER •
   10       | IDENTIFIER • COMMA IDList

    COMMA  shift, and go to state 13

    $default  reduce using rule 9 (IDList)


State 10

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList • RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE
    7 ParamList: ParamList • SEMICOLON Param

    SEMICOLON  shift, and go to state 14
    RPAREN     shift, and go to state 15


State 11

    6 ParamList: Param •

    $default  reduce using rule 6 (ParamList)


State 12

    8 Param: IDList • COLON Type

    COLON  shift, and go to state 16


State 13

   10 IDList: IDENTIFIER COMMA • IDList

    IDENTIFIER  shift, and go to state 9

    IDList  go to state 17


State 14

    7 ParamList: ParamList SEMICOLON • Param

    IDENTIFIER  shift, and go to state 9

    Param   go to state 18
    IDList  go to state 12


State 15

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN • RETURN Type LBRACE Body OptionalReturn RBRACE

    RETURN  shift, and go to state 19


State 16

    8 Param: IDList COLON • Type

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 25


State 17

   10 IDList: IDENTIFIER COMMA IDList •

    $default  reduce using rule 10 (IDList)


State 18

    7 ParamList: ParamList SEMICOLON Param •

    $default  reduce using rule 7 (ParamList)


State 19

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN • Type LBRACE Body OptionalReturn RBRACE

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 26


State 20

  113 Type: BOOLEAN •

    $default  reduce using rule 113 (Type)


State 21

  114 Type: CHAR •

    $default  reduce using rule 114 (Type)


State 22

  115 Type: INTEGER •

    $default  reduce using rule 115 (Type)


State 23

  116 Type: INTPTR •

    $default  reduce using rule 116 (Type)


State 24

  117 Type: CHARPTR •

    $default  reduce using rule 117 (Type)


State 25

    8 Param: IDList COLON Type •

    $default  reduce using rule 8 (Param)


State 26

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type • LBRACE Body OptionalReturn RBRACE

    LBRACE  shift, and go to state 27


State 27

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE • Body OptionalReturn RBRACE

    PROCEDURE  shift, and go to state 1

    $default  reduce using rule 12 (OptionalProcedures)

    Procedure           go to state 28
    Body                go to state 29
    OptionalProcedures  go to state 30
    NestedProcedures    go to state 31


State 28

   14 NestedProcedures: Procedure •
   15                 | Procedure • NestedProcedures

    PROCEDURE  shift, and go to state 1

    $default  reduce using rule 14 (NestedProcedures)

    Procedure         go to state 28
    NestedProcedures  go to state 32


State 29

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body • OptionalReturn RBRACE

    RETURN  shift, and go to state 33

    $default  reduce using rule 20 (OptionalReturn)

    OptionalReturn  go to state 34


State 30

   11 Body: OptionalProcedures • OptionalDeclarations OptionalStatements

    VAR  shift, and go to state 35

    $default  reduce using rule 16 (OptionalDeclarations)

    OptionalDeclarations  go to state 36
    Declarations          go to state 37
    VarDeclaration        go to state 38


State 31

   13 OptionalProcedures: NestedProcedures •

    $default  reduce using rule 13 (OptionalProcedures)


State 32

   15 NestedProcedures: Procedure NestedProcedures •

    $default  reduce using rule 15 (NestedProcedures)


State 33

   21 OptionalReturn: RETURN • Expression SEMICOLON

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 51
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 34

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn • RBRACE

    RBRACE  shift, and go to state 56


State 35

   25 VarDeclaration: VAR • SingleVarDeclaration SEMICOLON
   26               | VAR • MultiVarDeclaration SEMICOLON

    IDENTIFIER  shift, and go to state 57

    IDList                go to state 58
    SingleVarDeclaration  go to state 59
    MultiVarDeclaration   go to state 60


State 36

   11 Body: OptionalProcedures OptionalDeclarations • OptionalStatements

    IDENTIFIER  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    LBRACE      shift, and go to state 64

    $default  reduce using rule 18 (OptionalStatements)

    OptionalStatements  go to state 65
    Block               go to state 66
    Statements          go to state 67
    Statement           go to state 68
    FunctionCall        go to state 69


State 37

   17 OptionalDeclarations: Declarations •

    $default  reduce using rule 17 (OptionalDeclarations)


State 38

   23 Declarations: VarDeclaration •
   24             | VarDeclaration • Declarations

    VAR  shift, and go to state 35

    $default  reduce using rule 23 (Declarations)

    Declarations    go to state 70
    VarDeclaration  go to state 38


State 39

   69 PrimaryExpr: IDENTIFIER •
   72            | IDENTIFIER • LBRACKET Expression RBRACKET

    LBRACKET  shift, and go to state 71

    $default  reduce using rule 69 (PrimaryExpr)


State 40

   70 PrimaryExpr: INT_LITERAL •

    $default  reduce using rule 70 (PrimaryExpr)


State 41

   73 PrimaryExpr: CHAR_LITERAL •

    $default  reduce using rule 73 (PrimaryExpr)


State 42

   76 PrimaryExpr: NULLTOKEN •

    $default  reduce using rule 76 (PrimaryExpr)


State 43

   60 UnaryExpr: MINUS • UnaryExpr

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    UnaryExpr    go to state 72
    PrimaryExpr  go to state 55


State 44

   59 UnaryExpr: NOT • UnaryExpr

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    UnaryExpr    go to state 73
    PrimaryExpr  go to state 55


State 45

   61 UnaryExpr: AMP • Variable

    IDENTIFIER  shift, and go to state 74

    Variable  go to state 75


State 46

   62 UnaryExpr: DEREFERENCE • IDENTIFIER
   63          | DEREFERENCE • Expression
   64          | DEREFERENCE • IDENTIFIER LBRACKET INT_LITERAL RBRACKET

    IDENTIFIER    shift, and go to state 76
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 77
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 47

   74 PrimaryExpr: TRUE •

    $default  reduce using rule 74 (PrimaryExpr)


State 48

   75 PrimaryExpr: FALSE •

    $default  reduce using rule 75 (PrimaryExpr)


State 49

   71 PrimaryExpr: LPAREN • Expression RPAREN

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 78
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 50

   65 UnaryExpr: BAR • Expression BAR

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 79
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 51

   21 OptionalReturn: RETURN Expression • SEMICOLON
   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND        shift, and go to state 80
    EQUALS     shift, and go to state 81
    GT         shift, and go to state 82
    GTE        shift, and go to state 83
    LT         shift, and go to state 84
    LTE        shift, and go to state 85
    NOTEQUAL   shift, and go to state 86
    OR         shift, and go to state 87
    SEMICOLON  shift, and go to state 88


State 52

   52 Expression: AdditiveExpr •
   53 AdditiveExpr: AdditiveExpr • PLUS MultiplicativeExpr
   54             | AdditiveExpr • MINUS MultiplicativeExpr

    MINUS  shift, and go to state 89
    PLUS   shift, and go to state 90

    MINUS     [reduce using rule 52 (Expression)]
    PLUS      [reduce using rule 52 (Expression)]
    $default  reduce using rule 52 (Expression)


State 53

   55 AdditiveExpr: MultiplicativeExpr •
   56 MultiplicativeExpr: MultiplicativeExpr • MUL UnaryExpr
   57                   | MultiplicativeExpr • DIV UnaryExpr

    DIV  shift, and go to state 91
    MUL  shift, and go to state 92

    DIV       [reduce using rule 55 (AdditiveExpr)]
    MUL       [reduce using rule 55 (AdditiveExpr)]
    $default  reduce using rule 55 (AdditiveExpr)


State 54

   58 MultiplicativeExpr: UnaryExpr •

    $default  reduce using rule 58 (MultiplicativeExpr)


State 55

   66 UnaryExpr: PrimaryExpr •

    $default  reduce using rule 66 (UnaryExpr)


State 56

    4 Procedure: PROCEDURE IDENTIFIER LPAREN ParamList RPAREN RETURN Type LBRACE Body OptionalReturn RBRACE •

    $default  reduce using rule 4 (Procedure)


State 57

    9 IDList: IDENTIFIER •
   10       | IDENTIFIER • COMMA IDList
   27 SingleVarDeclaration: IDENTIFIER • COLON STRING LBRACKET INT_LITERAL RBRACKET
   28                     | IDENTIFIER • COLON Type

    COMMA  shift, and go to state 13
    COLON  shift, and go to state 93

    COLON  [reduce using rule 9 (IDList)]


State 58

   29 MultiVarDeclaration: IDList • COLON Type
   30                    | IDList • COLON STRING LBRACKET INT_LITERAL RBRACKET

    COLON  shift, and go to state 94


State 59

   25 VarDeclaration: VAR SingleVarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 95


State 60

   26 VarDeclaration: VAR MultiVarDeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 96


State 61

   33 Statement: IDENTIFIER • EQUAL Expression SEMICOLON
   34          | IDENTIFIER • EQUAL STRING_LITERAL SEMICOLON
   35          | IDENTIFIER • LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON
   36          | IDENTIFIER • LBRACKET Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON
   43 FunctionCall: IDENTIFIER • LPAREN ArgumentList RPAREN SEMICOLON

    EQUAL     shift, and go to state 97
    LPAREN    shift, and go to state 98
    LBRACKET  shift, and go to state 99


State 62

   37 Statement: IF • LPAREN Expression RPAREN Block
   38          | IF • LPAREN Expression RPAREN Block ELSE Block

    LPAREN  shift, and go to state 100


State 63

   39 Statement: WHILE • LPAREN Expression RPAREN Block

    LPAREN  shift, and go to state 101


State 64

   22 Block: LBRACE • OptionalDeclarations OptionalStatements RBRACE
   40 Statement: LBRACE • Statements RBRACE

    IDENTIFIER  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    VAR         shift, and go to state 35
    LBRACE      shift, and go to state 64

    IDENTIFIER  [reduce using rule 16 (OptionalDeclarations)]
    IF          [reduce using rule 16 (OptionalDeclarations)]
    WHILE       [reduce using rule 16 (OptionalDeclarations)]
    LBRACE      [reduce using rule 16 (OptionalDeclarations)]
    $default    reduce using rule 16 (OptionalDeclarations)

    OptionalDeclarations  go to state 102
    Block                 go to state 66
    Declarations          go to state 37
    VarDeclaration        go to state 38
    Statements            go to state 103
    Statement             go to state 68
    FunctionCall          go to state 69


State 65

   11 Body: OptionalProcedures OptionalDeclarations OptionalStatements •

    $default  reduce using rule 11 (Body)


State 66

   41 Statement: Block • OptionalStatements

    IDENTIFIER  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    LBRACE      shift, and go to state 64

    IDENTIFIER  [reduce using rule 18 (OptionalStatements)]
    IF          [reduce using rule 18 (OptionalStatements)]
    WHILE       [reduce using rule 18 (OptionalStatements)]
    LBRACE      [reduce using rule 18 (OptionalStatements)]
    $default    reduce using rule 18 (OptionalStatements)

    OptionalStatements  go to state 104
    Block               go to state 66
    Statements          go to state 67
    Statement           go to state 68
    FunctionCall        go to state 69


State 67

   19 OptionalStatements: Statements •

    $default  reduce using rule 19 (OptionalStatements)


State 68

   31 Statements: Statement •
   32           | Statement • Statements

    IDENTIFIER  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    LBRACE      shift, and go to state 64

    IDENTIFIER  [reduce using rule 31 (Statements)]
    IF          [reduce using rule 31 (Statements)]
    WHILE       [reduce using rule 31 (Statements)]
    LBRACE      [reduce using rule 31 (Statements)]
    $default    reduce using rule 31 (Statements)

    Block         go to state 66
    Statements    go to state 105
    Statement     go to state 68
    FunctionCall  go to state 69


State 69

   42 Statement: FunctionCall •

    $default  reduce using rule 42 (Statement)


State 70

   24 Declarations: VarDeclaration Declarations •

    $default  reduce using rule 24 (Declarations)


State 71

   72 PrimaryExpr: IDENTIFIER LBRACKET • Expression RBRACKET

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 106
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 72

   60 UnaryExpr: MINUS UnaryExpr •

    $default  reduce using rule 60 (UnaryExpr)


State 73

   59 UnaryExpr: NOT UnaryExpr •

    $default  reduce using rule 59 (UnaryExpr)


State 74

   67 Variable: IDENTIFIER •
   68         | IDENTIFIER • LBRACKET Expression RBRACKET

    LBRACKET  shift, and go to state 107

    $default  reduce using rule 67 (Variable)


State 75

   61 UnaryExpr: AMP Variable •

    $default  reduce using rule 61 (UnaryExpr)


State 76

   62 UnaryExpr: DEREFERENCE IDENTIFIER •
   64          | DEREFERENCE IDENTIFIER • LBRACKET INT_LITERAL RBRACKET
   69 PrimaryExpr: IDENTIFIER •
   72            | IDENTIFIER • LBRACKET Expression RBRACKET

    LBRACKET  shift, and go to state 108

    AND        reduce using rule 62 (UnaryExpr)
    AND        [reduce using rule 69 (PrimaryExpr)]
    DIV        reduce using rule 62 (UnaryExpr)
    DIV        [reduce using rule 69 (PrimaryExpr)]
    EQUALS     reduce using rule 62 (UnaryExpr)
    EQUALS     [reduce using rule 69 (PrimaryExpr)]
    GT         reduce using rule 62 (UnaryExpr)
    GT         [reduce using rule 69 (PrimaryExpr)]
    GTE        reduce using rule 62 (UnaryExpr)
    GTE        [reduce using rule 69 (PrimaryExpr)]
    LT         reduce using rule 62 (UnaryExpr)
    LT         [reduce using rule 69 (PrimaryExpr)]
    LTE        reduce using rule 62 (UnaryExpr)
    LTE        [reduce using rule 69 (PrimaryExpr)]
    MINUS      reduce using rule 62 (UnaryExpr)
    MINUS      [reduce using rule 69 (PrimaryExpr)]
    NOTEQUAL   reduce using rule 62 (UnaryExpr)
    NOTEQUAL   [reduce using rule 69 (PrimaryExpr)]
    OR         reduce using rule 62 (UnaryExpr)
    OR         [reduce using rule 69 (PrimaryExpr)]
    PLUS       reduce using rule 62 (UnaryExpr)
    PLUS       [reduce using rule 69 (PrimaryExpr)]
    MUL        reduce using rule 62 (UnaryExpr)
    MUL        [reduce using rule 69 (PrimaryExpr)]
    SEMICOLON  reduce using rule 62 (UnaryExpr)
    SEMICOLON  [reduce using rule 69 (PrimaryExpr)]
    RPAREN     reduce using rule 62 (UnaryExpr)
    RPAREN     [reduce using rule 69 (PrimaryExpr)]
    BAR        reduce using rule 62 (UnaryExpr)
    BAR        [reduce using rule 69 (PrimaryExpr)]
    RBRACKET   reduce using rule 62 (UnaryExpr)
    RBRACKET   [reduce using rule 69 (PrimaryExpr)]
    $default   reduce using rule 62 (UnaryExpr)


State 77

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression
   63 UnaryExpr: DEREFERENCE Expression •

    $default  reduce using rule 63 (UnaryExpr)


State 78

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression
   71 PrimaryExpr: LPAREN Expression • RPAREN

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    RPAREN    shift, and go to state 109


State 79

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression
   65 UnaryExpr: BAR Expression • BAR

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    BAR       shift, and go to state 110


State 80

   45 Expression: Expression AND • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 111
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 81

   46 Expression: Expression EQUALS • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 112
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 82

   50 Expression: Expression GT • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 113
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 83

   51 Expression: Expression GTE • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 114
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 84

   48 Expression: Expression LT • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 115
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 85

   49 Expression: Expression LTE • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 116
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 86

   47 Expression: Expression NOTEQUAL • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 117
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 87

   44 Expression: Expression OR • Expression

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 118
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 88

   21 OptionalReturn: RETURN Expression SEMICOLON •

    $default  reduce using rule 21 (OptionalReturn)


State 89

   54 AdditiveExpr: AdditiveExpr MINUS • MultiplicativeExpr

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    MultiplicativeExpr  go to state 119
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 90

   53 AdditiveExpr: AdditiveExpr PLUS • MultiplicativeExpr

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    MultiplicativeExpr  go to state 120
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 91

   57 MultiplicativeExpr: MultiplicativeExpr DIV • UnaryExpr

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    UnaryExpr    go to state 121
    PrimaryExpr  go to state 55


State 92

   56 MultiplicativeExpr: MultiplicativeExpr MUL • UnaryExpr

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    UnaryExpr    go to state 122
    PrimaryExpr  go to state 55


State 93

   27 SingleVarDeclaration: IDENTIFIER COLON • STRING LBRACKET INT_LITERAL RBRACKET
   28                     | IDENTIFIER COLON • Type

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 123
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 124


State 94

   29 MultiVarDeclaration: IDList COLON • Type
   30                    | IDList COLON • STRING LBRACKET INT_LITERAL RBRACKET

    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    INTEGER  shift, and go to state 22
    STRING   shift, and go to state 125
    INTPTR   shift, and go to state 23
    CHARPTR  shift, and go to state 24

    Type  go to state 126


State 95

   25 VarDeclaration: VAR SingleVarDeclaration SEMICOLON •

    $default  reduce using rule 25 (VarDeclaration)


State 96

   26 VarDeclaration: VAR MultiVarDeclaration SEMICOLON •

    $default  reduce using rule 26 (VarDeclaration)


State 97

   33 Statement: IDENTIFIER EQUAL • Expression SEMICOLON
   34          | IDENTIFIER EQUAL • STRING_LITERAL SEMICOLON

    IDENTIFIER      shift, and go to state 39
    INT_LITERAL     shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    NULLTOKEN       shift, and go to state 42
    MINUS           shift, and go to state 43
    NOT             shift, and go to state 44
    AMP             shift, and go to state 45
    DEREFERENCE     shift, and go to state 46
    TRUE            shift, and go to state 47
    FALSE           shift, and go to state 48
    LPAREN          shift, and go to state 49
    BAR             shift, and go to state 50
    STRING_LITERAL  shift, and go to state 127

    Expression          go to state 128
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 98

   43 FunctionCall: IDENTIFIER LPAREN • ArgumentList RPAREN SEMICOLON

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    $default  reduce using rule 77 (ArgumentList)

    ArgumentList           go to state 141
    ExpressionArg          go to state 142
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 99

   35 Statement: IDENTIFIER LBRACKET • Expression RBRACKET EQUAL Expression SEMICOLON
   36          | IDENTIFIER LBRACKET • Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 147
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 100

   37 Statement: IF LPAREN • Expression RPAREN Block
   38          | IF LPAREN • Expression RPAREN Block ELSE Block

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 148
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 101

   39 Statement: WHILE LPAREN • Expression RPAREN Block

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 149
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 102

   22 Block: LBRACE OptionalDeclarations • OptionalStatements RBRACE

    IDENTIFIER  shift, and go to state 61
    IF          shift, and go to state 62
    WHILE       shift, and go to state 63
    LBRACE      shift, and go to state 64

    $default  reduce using rule 18 (OptionalStatements)

    OptionalStatements  go to state 150
    Block               go to state 66
    Statements          go to state 67
    Statement           go to state 68
    FunctionCall        go to state 69


State 103

   40 Statement: LBRACE Statements • RBRACE

    RBRACE  shift, and go to state 151


State 104

   41 Statement: Block OptionalStatements •

    $default  reduce using rule 41 (Statement)


State 105

   32 Statements: Statement Statements •

    $default  reduce using rule 32 (Statements)


State 106

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression
   72 PrimaryExpr: IDENTIFIER LBRACKET Expression • RBRACKET

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    RBRACKET  shift, and go to state 152


State 107

   68 Variable: IDENTIFIER LBRACKET • Expression RBRACKET

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 40
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 153
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 108

   64 UnaryExpr: DEREFERENCE IDENTIFIER LBRACKET • INT_LITERAL RBRACKET
   72 PrimaryExpr: IDENTIFIER LBRACKET • Expression RBRACKET

    IDENTIFIER    shift, and go to state 39
    INT_LITERAL   shift, and go to state 154
    CHAR_LITERAL  shift, and go to state 41
    NULLTOKEN     shift, and go to state 42
    MINUS         shift, and go to state 43
    NOT           shift, and go to state 44
    AMP           shift, and go to state 45
    DEREFERENCE   shift, and go to state 46
    TRUE          shift, and go to state 47
    FALSE         shift, and go to state 48
    LPAREN        shift, and go to state 49
    BAR           shift, and go to state 50

    Expression          go to state 106
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 109

   71 PrimaryExpr: LPAREN Expression RPAREN •

    $default  reduce using rule 71 (PrimaryExpr)


State 110

   65 UnaryExpr: BAR Expression BAR •

    $default  reduce using rule 65 (UnaryExpr)


State 111

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   45           | Expression AND Expression •
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86

    $default  reduce using rule 45 (Expression)


State 112

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   46           | Expression EQUALS Expression •
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    GT   shift, and go to state 82
    GTE  shift, and go to state 83
    LT   shift, and go to state 84
    LTE  shift, and go to state 85

    $default  reduce using rule 46 (Expression)


State 113

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   50           | Expression GT Expression •
   51           | Expression • GTE Expression

    $default  reduce using rule 50 (Expression)


State 114

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression
   51           | Expression GTE Expression •

    $default  reduce using rule 51 (Expression)


State 115

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   48           | Expression LT Expression •
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    $default  reduce using rule 48 (Expression)


State 116

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   49           | Expression LTE Expression •
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    $default  reduce using rule 49 (Expression)


State 117

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   47           | Expression NOTEQUAL Expression •
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    GT   shift, and go to state 82
    GTE  shift, and go to state 83
    LT   shift, and go to state 84
    LTE  shift, and go to state 85

    $default  reduce using rule 47 (Expression)


State 118

   44 Expression: Expression • OR Expression
   44           | Expression OR Expression •
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86

    $default  reduce using rule 44 (Expression)


State 119

   54 AdditiveExpr: AdditiveExpr MINUS MultiplicativeExpr •
   56 MultiplicativeExpr: MultiplicativeExpr • MUL UnaryExpr
   57                   | MultiplicativeExpr • DIV UnaryExpr

    DIV  shift, and go to state 91
    MUL  shift, and go to state 92

    $default  reduce using rule 54 (AdditiveExpr)


State 120

   53 AdditiveExpr: AdditiveExpr PLUS MultiplicativeExpr •
   56 MultiplicativeExpr: MultiplicativeExpr • MUL UnaryExpr
   57                   | MultiplicativeExpr • DIV UnaryExpr

    DIV  shift, and go to state 91
    MUL  shift, and go to state 92

    $default  reduce using rule 53 (AdditiveExpr)


State 121

   57 MultiplicativeExpr: MultiplicativeExpr DIV UnaryExpr •

    $default  reduce using rule 57 (MultiplicativeExpr)


State 122

   56 MultiplicativeExpr: MultiplicativeExpr MUL UnaryExpr •

    $default  reduce using rule 56 (MultiplicativeExpr)


State 123

   27 SingleVarDeclaration: IDENTIFIER COLON STRING • LBRACKET INT_LITERAL RBRACKET

    LBRACKET  shift, and go to state 155


State 124

   28 SingleVarDeclaration: IDENTIFIER COLON Type •

    $default  reduce using rule 28 (SingleVarDeclaration)


State 125

   30 MultiVarDeclaration: IDList COLON STRING • LBRACKET INT_LITERAL RBRACKET

    LBRACKET  shift, and go to state 156


State 126

   29 MultiVarDeclaration: IDList COLON Type •

    $default  reduce using rule 29 (MultiVarDeclaration)


State 127

   34 Statement: IDENTIFIER EQUAL STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 157


State 128

   33 Statement: IDENTIFIER EQUAL Expression • SEMICOLON
   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND        shift, and go to state 80
    EQUALS     shift, and go to state 81
    GT         shift, and go to state 82
    GTE        shift, and go to state 83
    LT         shift, and go to state 84
    LTE        shift, and go to state 85
    NOTEQUAL   shift, and go to state 86
    OR         shift, and go to state 87
    SEMICOLON  shift, and go to state 158


State 129

  105 PrimaryExprArg: IDENTIFIER •
  108               | IDENTIFIER • LBRACKET ExpressionArg RBRACKET

    LBRACKET  shift, and go to state 159

    $default  reduce using rule 105 (PrimaryExprArg)


State 130

  106 PrimaryExprArg: INT_LITERAL •

    $default  reduce using rule 106 (PrimaryExprArg)


State 131

  109 PrimaryExprArg: CHAR_LITERAL •

    $default  reduce using rule 109 (PrimaryExprArg)


State 132

  112 PrimaryExprArg: NULLTOKEN •

    $default  reduce using rule 112 (PrimaryExprArg)


State 133

   96 UnaryExprArg: MINUS • UnaryExprArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    UnaryExprArg    go to state 160
    PrimaryExprArg  go to state 146


State 134

   95 UnaryExprArg: NOT • UnaryExprArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    UnaryExprArg    go to state 161
    PrimaryExprArg  go to state 146


State 135

   97 UnaryExprArg: AMP • VariableArg

    IDENTIFIER  shift, and go to state 162

    VariableArg  go to state 163


State 136

   98 UnaryExprArg: DEREFERENCE • IDENTIFIER
   99             | DEREFERENCE • ExpressionArg
  100             | DEREFERENCE • IDENTIFIER LBRACKET INT_LITERAL RBRACKET

    IDENTIFIER    shift, and go to state 164
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 165
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 137

  110 PrimaryExprArg: TRUE •

    $default  reduce using rule 110 (PrimaryExprArg)


State 138

  111 PrimaryExprArg: FALSE •

    $default  reduce using rule 111 (PrimaryExprArg)


State 139

  107 PrimaryExprArg: LPAREN • ExpressionArg RPAREN

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 166
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 140

  101 UnaryExprArg: BAR • ExpressionArg BAR

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 167
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 141

   43 FunctionCall: IDENTIFIER LPAREN ArgumentList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 168


State 142

   78 ArgumentList: ExpressionArg •
   79             | ExpressionArg • COMMA ArgumentList
   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    AND       shift, and go to state 169
    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175
    OR        shift, and go to state 176
    COMMA     shift, and go to state 177

    $default  reduce using rule 78 (ArgumentList)


State 143

   88 ExpressionArg: AdditiveExprArg •
   89 AdditiveExprArg: AdditiveExprArg • PLUS MultiplicativeExprArg
   90                | AdditiveExprArg • MINUS MultiplicativeExprArg

    MINUS  shift, and go to state 178
    PLUS   shift, and go to state 179

    MINUS     [reduce using rule 88 (ExpressionArg)]
    PLUS      [reduce using rule 88 (ExpressionArg)]
    $default  reduce using rule 88 (ExpressionArg)


State 144

   91 AdditiveExprArg: MultiplicativeExprArg •
   92 MultiplicativeExprArg: MultiplicativeExprArg • MUL UnaryExprArg
   93                      | MultiplicativeExprArg • DIV UnaryExprArg

    DIV  shift, and go to state 180
    MUL  shift, and go to state 181

    DIV       [reduce using rule 91 (AdditiveExprArg)]
    MUL       [reduce using rule 91 (AdditiveExprArg)]
    $default  reduce using rule 91 (AdditiveExprArg)


State 145

   94 MultiplicativeExprArg: UnaryExprArg •

    $default  reduce using rule 94 (MultiplicativeExprArg)


State 146

  102 UnaryExprArg: PrimaryExprArg •

    $default  reduce using rule 102 (UnaryExprArg)


State 147

   35 Statement: IDENTIFIER LBRACKET Expression • RBRACKET EQUAL Expression SEMICOLON
   36          | IDENTIFIER LBRACKET Expression • RBRACKET EQUAL STRING_LITERAL SEMICOLON
   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    RBRACKET  shift, and go to state 182


State 148

   37 Statement: IF LPAREN Expression • RPAREN Block
   38          | IF LPAREN Expression • RPAREN Block ELSE Block
   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    RPAREN    shift, and go to state 183


State 149

   39 Statement: WHILE LPAREN Expression • RPAREN Block
   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    RPAREN    shift, and go to state 184


State 150

   22 Block: LBRACE OptionalDeclarations OptionalStatements • RBRACE

    RBRACE  shift, and go to state 185


State 151

   40 Statement: LBRACE Statements RBRACE •

    $default  reduce using rule 40 (Statement)


State 152

   72 PrimaryExpr: IDENTIFIER LBRACKET Expression RBRACKET •

    $default  reduce using rule 72 (PrimaryExpr)


State 153

   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression
   68 Variable: IDENTIFIER LBRACKET Expression • RBRACKET

    AND       shift, and go to state 80
    EQUALS    shift, and go to state 81
    GT        shift, and go to state 82
    GTE       shift, and go to state 83
    LT        shift, and go to state 84
    LTE       shift, and go to state 85
    NOTEQUAL  shift, and go to state 86
    OR        shift, and go to state 87
    RBRACKET  shift, and go to state 186


State 154

   64 UnaryExpr: DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL • RBRACKET
   70 PrimaryExpr: INT_LITERAL •

    RBRACKET  shift, and go to state 187

    RBRACKET  [reduce using rule 70 (PrimaryExpr)]
    $default  reduce using rule 70 (PrimaryExpr)


State 155

   27 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET • INT_LITERAL RBRACKET

    INT_LITERAL  shift, and go to state 188


State 156

   30 MultiVarDeclaration: IDList COLON STRING LBRACKET • INT_LITERAL RBRACKET

    INT_LITERAL  shift, and go to state 189


State 157

   34 Statement: IDENTIFIER EQUAL STRING_LITERAL SEMICOLON •

    $default  reduce using rule 34 (Statement)


State 158

   33 Statement: IDENTIFIER EQUAL Expression SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 159

  108 PrimaryExprArg: IDENTIFIER LBRACKET • ExpressionArg RBRACKET

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 190
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 160

   96 UnaryExprArg: MINUS UnaryExprArg •

    $default  reduce using rule 96 (UnaryExprArg)


State 161

   95 UnaryExprArg: NOT UnaryExprArg •

    $default  reduce using rule 95 (UnaryExprArg)


State 162

  103 VariableArg: IDENTIFIER •
  104            | IDENTIFIER • LBRACKET ExpressionArg RBRACKET

    LBRACKET  shift, and go to state 191

    $default  reduce using rule 103 (VariableArg)


State 163

   97 UnaryExprArg: AMP VariableArg •

    $default  reduce using rule 97 (UnaryExprArg)


State 164

   98 UnaryExprArg: DEREFERENCE IDENTIFIER •
  100             | DEREFERENCE IDENTIFIER • LBRACKET INT_LITERAL RBRACKET
  105 PrimaryExprArg: IDENTIFIER •
  108               | IDENTIFIER • LBRACKET ExpressionArg RBRACKET

    LBRACKET  shift, and go to state 192

    AND       reduce using rule 98 (UnaryExprArg)
    AND       [reduce using rule 105 (PrimaryExprArg)]
    DIV       reduce using rule 98 (UnaryExprArg)
    DIV       [reduce using rule 105 (PrimaryExprArg)]
    EQUALS    reduce using rule 98 (UnaryExprArg)
    EQUALS    [reduce using rule 105 (PrimaryExprArg)]
    GT        reduce using rule 98 (UnaryExprArg)
    GT        [reduce using rule 105 (PrimaryExprArg)]
    GTE       reduce using rule 98 (UnaryExprArg)
    GTE       [reduce using rule 105 (PrimaryExprArg)]
    LT        reduce using rule 98 (UnaryExprArg)
    LT        [reduce using rule 105 (PrimaryExprArg)]
    LTE       reduce using rule 98 (UnaryExprArg)
    LTE       [reduce using rule 105 (PrimaryExprArg)]
    MINUS     reduce using rule 98 (UnaryExprArg)
    MINUS     [reduce using rule 105 (PrimaryExprArg)]
    NOTEQUAL  reduce using rule 98 (UnaryExprArg)
    NOTEQUAL  [reduce using rule 105 (PrimaryExprArg)]
    OR        reduce using rule 98 (UnaryExprArg)
    OR        [reduce using rule 105 (PrimaryExprArg)]
    PLUS      reduce using rule 98 (UnaryExprArg)
    PLUS      [reduce using rule 105 (PrimaryExprArg)]
    MUL       reduce using rule 98 (UnaryExprArg)
    MUL       [reduce using rule 105 (PrimaryExprArg)]
    COMMA     reduce using rule 98 (UnaryExprArg)
    COMMA     [reduce using rule 105 (PrimaryExprArg)]
    RPAREN    reduce using rule 98 (UnaryExprArg)
    RPAREN    [reduce using rule 105 (PrimaryExprArg)]
    BAR       reduce using rule 98 (UnaryExprArg)
    BAR       [reduce using rule 105 (PrimaryExprArg)]
    RBRACKET  reduce using rule 98 (UnaryExprArg)
    RBRACKET  [reduce using rule 105 (PrimaryExprArg)]
    $default  reduce using rule 98 (UnaryExprArg)


State 165

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg
   99 UnaryExprArg: DEREFERENCE ExpressionArg •

    $default  reduce using rule 99 (UnaryExprArg)


State 166

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg
  107 PrimaryExprArg: LPAREN ExpressionArg • RPAREN

    AND       shift, and go to state 169
    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175
    OR        shift, and go to state 176
    RPAREN    shift, and go to state 193


State 167

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg
  101 UnaryExprArg: BAR ExpressionArg • BAR

    AND       shift, and go to state 169
    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175
    OR        shift, and go to state 176
    BAR       shift, and go to state 194


State 168

   43 FunctionCall: IDENTIFIER LPAREN ArgumentList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 195


State 169

   81 ExpressionArg: ExpressionArg AND • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 196
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 170

   82 ExpressionArg: ExpressionArg EQUALS • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 197
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 171

   86 ExpressionArg: ExpressionArg GT • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 198
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 172

   87 ExpressionArg: ExpressionArg GTE • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 199
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 173

   84 ExpressionArg: ExpressionArg LT • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 200
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 174

   85 ExpressionArg: ExpressionArg LTE • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 201
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 175

   83 ExpressionArg: ExpressionArg NOTEQUAL • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 202
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 176

   80 ExpressionArg: ExpressionArg OR • ExpressionArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 203
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 177

   79 ArgumentList: ExpressionArg COMMA • ArgumentList

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    $default  reduce using rule 77 (ArgumentList)

    ArgumentList           go to state 204
    ExpressionArg          go to state 142
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 178

   90 AdditiveExprArg: AdditiveExprArg MINUS • MultiplicativeExprArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    MultiplicativeExprArg  go to state 205
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 179

   89 AdditiveExprArg: AdditiveExprArg PLUS • MultiplicativeExprArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    MultiplicativeExprArg  go to state 206
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 180

   93 MultiplicativeExprArg: MultiplicativeExprArg DIV • UnaryExprArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    UnaryExprArg    go to state 207
    PrimaryExprArg  go to state 146


State 181

   92 MultiplicativeExprArg: MultiplicativeExprArg MUL • UnaryExprArg

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    UnaryExprArg    go to state 208
    PrimaryExprArg  go to state 146


State 182

   35 Statement: IDENTIFIER LBRACKET Expression RBRACKET • EQUAL Expression SEMICOLON
   36          | IDENTIFIER LBRACKET Expression RBRACKET • EQUAL STRING_LITERAL SEMICOLON

    EQUAL  shift, and go to state 209


State 183

   37 Statement: IF LPAREN Expression RPAREN • Block
   38          | IF LPAREN Expression RPAREN • Block ELSE Block

    LBRACE  shift, and go to state 210

    Block  go to state 211


State 184

   39 Statement: WHILE LPAREN Expression RPAREN • Block

    LBRACE  shift, and go to state 210

    Block  go to state 212


State 185

   22 Block: LBRACE OptionalDeclarations OptionalStatements RBRACE •

    $default  reduce using rule 22 (Block)


State 186

   68 Variable: IDENTIFIER LBRACKET Expression RBRACKET •

    $default  reduce using rule 68 (Variable)


State 187

   64 UnaryExpr: DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 64 (UnaryExpr)


State 188

   27 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET INT_LITERAL • RBRACKET

    RBRACKET  shift, and go to state 213


State 189

   30 MultiVarDeclaration: IDList COLON STRING LBRACKET INT_LITERAL • RBRACKET

    RBRACKET  shift, and go to state 214


State 190

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg
  108 PrimaryExprArg: IDENTIFIER LBRACKET ExpressionArg • RBRACKET

    AND       shift, and go to state 169
    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175
    OR        shift, and go to state 176
    RBRACKET  shift, and go to state 215


State 191

  104 VariableArg: IDENTIFIER LBRACKET • ExpressionArg RBRACKET

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 130
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 216
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 192

  100 UnaryExprArg: DEREFERENCE IDENTIFIER LBRACKET • INT_LITERAL RBRACKET
  108 PrimaryExprArg: IDENTIFIER LBRACKET • ExpressionArg RBRACKET

    IDENTIFIER    shift, and go to state 129
    INT_LITERAL   shift, and go to state 217
    CHAR_LITERAL  shift, and go to state 131
    NULLTOKEN     shift, and go to state 132
    MINUS         shift, and go to state 133
    NOT           shift, and go to state 134
    AMP           shift, and go to state 135
    DEREFERENCE   shift, and go to state 136
    TRUE          shift, and go to state 137
    FALSE         shift, and go to state 138
    LPAREN        shift, and go to state 139
    BAR           shift, and go to state 140

    ExpressionArg          go to state 190
    AdditiveExprArg        go to state 143
    MultiplicativeExprArg  go to state 144
    UnaryExprArg           go to state 145
    PrimaryExprArg         go to state 146


State 193

  107 PrimaryExprArg: LPAREN ExpressionArg RPAREN •

    $default  reduce using rule 107 (PrimaryExprArg)


State 194

  101 UnaryExprArg: BAR ExpressionArg BAR •

    $default  reduce using rule 101 (UnaryExprArg)


State 195

   43 FunctionCall: IDENTIFIER LPAREN ArgumentList RPAREN SEMICOLON •

    $default  reduce using rule 43 (FunctionCall)


State 196

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   81              | ExpressionArg AND ExpressionArg •
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175

    $default  reduce using rule 81 (ExpressionArg)


State 197

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   82              | ExpressionArg EQUALS ExpressionArg •
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    GT   shift, and go to state 171
    GTE  shift, and go to state 172
    LT   shift, and go to state 173
    LTE  shift, and go to state 174

    $default  reduce using rule 82 (ExpressionArg)


State 198

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   86              | ExpressionArg GT ExpressionArg •
   87              | ExpressionArg • GTE ExpressionArg

    $default  reduce using rule 86 (ExpressionArg)


State 199

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg
   87              | ExpressionArg GTE ExpressionArg •

    $default  reduce using rule 87 (ExpressionArg)


State 200

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   84              | ExpressionArg LT ExpressionArg •
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    $default  reduce using rule 84 (ExpressionArg)


State 201

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   85              | ExpressionArg LTE ExpressionArg •
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    $default  reduce using rule 85 (ExpressionArg)


State 202

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   83              | ExpressionArg NOTEQUAL ExpressionArg •
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    GT   shift, and go to state 171
    GTE  shift, and go to state 172
    LT   shift, and go to state 173
    LTE  shift, and go to state 174

    $default  reduce using rule 83 (ExpressionArg)


State 203

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   80              | ExpressionArg OR ExpressionArg •
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg

    AND       shift, and go to state 169
    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175

    $default  reduce using rule 80 (ExpressionArg)


State 204

   79 ArgumentList: ExpressionArg COMMA ArgumentList •

    $default  reduce using rule 79 (ArgumentList)


State 205

   90 AdditiveExprArg: AdditiveExprArg MINUS MultiplicativeExprArg •
   92 MultiplicativeExprArg: MultiplicativeExprArg • MUL UnaryExprArg
   93                      | MultiplicativeExprArg • DIV UnaryExprArg

    DIV  shift, and go to state 180
    MUL  shift, and go to state 181

    $default  reduce using rule 90 (AdditiveExprArg)


State 206

   89 AdditiveExprArg: AdditiveExprArg PLUS MultiplicativeExprArg •
   92 MultiplicativeExprArg: MultiplicativeExprArg • MUL UnaryExprArg
   93                      | MultiplicativeExprArg • DIV UnaryExprArg

    DIV  shift, and go to state 180
    MUL  shift, and go to state 181

    $default  reduce using rule 89 (AdditiveExprArg)


State 207

   93 MultiplicativeExprArg: MultiplicativeExprArg DIV UnaryExprArg •

    $default  reduce using rule 93 (MultiplicativeExprArg)


State 208

   92 MultiplicativeExprArg: MultiplicativeExprArg MUL UnaryExprArg •

    $default  reduce using rule 92 (MultiplicativeExprArg)


State 209

   35 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL • Expression SEMICOLON
   36          | IDENTIFIER LBRACKET Expression RBRACKET EQUAL • STRING_LITERAL SEMICOLON

    IDENTIFIER      shift, and go to state 39
    INT_LITERAL     shift, and go to state 40
    CHAR_LITERAL    shift, and go to state 41
    NULLTOKEN       shift, and go to state 42
    MINUS           shift, and go to state 43
    NOT             shift, and go to state 44
    AMP             shift, and go to state 45
    DEREFERENCE     shift, and go to state 46
    TRUE            shift, and go to state 47
    FALSE           shift, and go to state 48
    LPAREN          shift, and go to state 49
    BAR             shift, and go to state 50
    STRING_LITERAL  shift, and go to state 218

    Expression          go to state 219
    AdditiveExpr        go to state 52
    MultiplicativeExpr  go to state 53
    UnaryExpr           go to state 54
    PrimaryExpr         go to state 55


State 210

   22 Block: LBRACE • OptionalDeclarations OptionalStatements RBRACE

    VAR  shift, and go to state 35

    $default  reduce using rule 16 (OptionalDeclarations)

    OptionalDeclarations  go to state 102
    Declarations          go to state 37
    VarDeclaration        go to state 38


State 211

   37 Statement: IF LPAREN Expression RPAREN Block •
   38          | IF LPAREN Expression RPAREN Block • ELSE Block

    ELSE  shift, and go to state 220

    $default  reduce using rule 37 (Statement)


State 212

   39 Statement: WHILE LPAREN Expression RPAREN Block •

    $default  reduce using rule 39 (Statement)


State 213

   27 SingleVarDeclaration: IDENTIFIER COLON STRING LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 27 (SingleVarDeclaration)


State 214

   30 MultiVarDeclaration: IDList COLON STRING LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 30 (MultiVarDeclaration)


State 215

  108 PrimaryExprArg: IDENTIFIER LBRACKET ExpressionArg RBRACKET •

    $default  reduce using rule 108 (PrimaryExprArg)


State 216

   80 ExpressionArg: ExpressionArg • OR ExpressionArg
   81              | ExpressionArg • AND ExpressionArg
   82              | ExpressionArg • EQUALS ExpressionArg
   83              | ExpressionArg • NOTEQUAL ExpressionArg
   84              | ExpressionArg • LT ExpressionArg
   85              | ExpressionArg • LTE ExpressionArg
   86              | ExpressionArg • GT ExpressionArg
   87              | ExpressionArg • GTE ExpressionArg
  104 VariableArg: IDENTIFIER LBRACKET ExpressionArg • RBRACKET

    AND       shift, and go to state 169
    EQUALS    shift, and go to state 170
    GT        shift, and go to state 171
    GTE       shift, and go to state 172
    LT        shift, and go to state 173
    LTE       shift, and go to state 174
    NOTEQUAL  shift, and go to state 175
    OR        shift, and go to state 176
    RBRACKET  shift, and go to state 221


State 217

  100 UnaryExprArg: DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL • RBRACKET
  106 PrimaryExprArg: INT_LITERAL •

    RBRACKET  shift, and go to state 222

    RBRACKET  [reduce using rule 106 (PrimaryExprArg)]
    $default  reduce using rule 106 (PrimaryExprArg)


State 218

   36 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL STRING_LITERAL • SEMICOLON

    SEMICOLON  shift, and go to state 223


State 219

   35 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression • SEMICOLON
   44 Expression: Expression • OR Expression
   45           | Expression • AND Expression
   46           | Expression • EQUALS Expression
   47           | Expression • NOTEQUAL Expression
   48           | Expression • LT Expression
   49           | Expression • LTE Expression
   50           | Expression • GT Expression
   51           | Expression • GTE Expression

    AND        shift, and go to state 80
    EQUALS     shift, and go to state 81
    GT         shift, and go to state 82
    GTE        shift, and go to state 83
    LT         shift, and go to state 84
    LTE        shift, and go to state 85
    NOTEQUAL   shift, and go to state 86
    OR         shift, and go to state 87
    SEMICOLON  shift, and go to state 224


State 220

   38 Statement: IF LPAREN Expression RPAREN Block ELSE • Block

    LBRACE  shift, and go to state 210

    Block  go to state 225


State 221

  104 VariableArg: IDENTIFIER LBRACKET ExpressionArg RBRACKET •

    $default  reduce using rule 104 (VariableArg)


State 222

  100 UnaryExprArg: DEREFERENCE IDENTIFIER LBRACKET INT_LITERAL RBRACKET •

    $default  reduce using rule 100 (UnaryExprArg)


State 223

   36 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL STRING_LITERAL SEMICOLON •

    $default  reduce using rule 36 (Statement)


State 224

   35 Statement: IDENTIFIER LBRACKET Expression RBRACKET EQUAL Expression SEMICOLON •

    $default  reduce using rule 35 (Statement)


State 225

   38 Statement: IF LPAREN Expression RPAREN Block ELSE Block •

    $default  reduce using rule 38 (Statement)
